# SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

# This secret was created by running:
# 
# kubectl -n crossplane-system create secret docker-registry package-pull-secret \                                                                                           â—‹ kind-kind negz@mael
#   --docker-server=us-west1-docker.pkg.dev \
#   --docker-email=xp-install-test@crossplane-playground.iam.gserviceaccount.com \
#   --docker-username=_json_key \
#   --docker-password="$(cat service-account-key.json)"
#
# We're okay with having these credentials checked in in plaintext because the
# service account they grant access to only has permission to pull from the
# xp-install-test Google Artifact Registry, which contains only the empty test
# Configuration defined by crossplane.yaml.

# TODO(negz): Update the comment on the xp-install-test service account and GAR
# repository to indicate these now live in c/c, not c/test.
apiVersion: v1
kind: Secret
metadata:
  namespace: crossplane-system
  name: package-pull-secret
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: eyJhdXRocyI6eyJ1cy13ZXN0MS1kb2NrZXIucGtnLmRldiI6eyJ1c2VybmFtZSI6Il9qc29uX2tleSIsInBhc3N3b3JkIjoie1xuICBcInR5cGVcIjogXCJzZXJ2aWNlX2FjY291bnRcIixcbiAgXCJwcm9qZWN0X2lkXCI6IFwiY3Jvc3NwbGFuZS1wbGF5Z3JvdW5kXCIsXG4gIFwicHJpdmF0ZV9rZXlfaWRcIjogXCIzODk2YjY4NDVkYmJmNzc0MzlhMGI2Nzc0MmM2OWY4ZmZhYzk3YjhhXCIsXG4gIFwicHJpdmF0ZV9rZXlcIjogXCItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJBUUM0K0p5YitlUVp3Y2w2XFxucVFxY1lrdGJkanBlbG82VHg3V3oyS2VFOUZmblZwM1pHU2c3enByRE4rTi9ESndvRzcvZytnL3hkRE5QS1M4N1xcbnMrUy8walFqb1FFNDh2ak9SZnVOazg1VnlpcHcwdjUrR3hBbmJkWEVLNWlBMXM4OWFic0FsL04wN3JkenZWODhcXG5NS1hYeTQ5QTUybDUvOU1VdzlWLzUwMlhHTGdFR1JWazVuZm4ySU41dVVkQ0RYbUphbnd4bjIybGxSY3pMUXFSXFxuYmFILzhkTVpXbkNZNjFvMXptZitoK1FhQzFOUG5TWGttSlpjaW9wMEtnL3lBeGlzc1E2WEhGanlZb2owNHp0YVxcbm1nUWlLNy83a3JsNFZFaHY3dmJjanQwdTl0bGJuUXJza2xKWHhmUUNxTGZ6OFpjb2RDaDFtMk5FYlduamxLdUhcXG5ZTVFneGE4QkFnTUJBQUVDZ2dFQUY5MERIMkJhM0RQVEVYOFRmbDkwQjJXMlhCT2lhMUJka2NsR3UzRm1rZExyXFxuNUdGSmZvWEdFNTkzT3lIZVY1SlU2K3AyK2hpYXNnREhOaldjTWw4bEdOK2hyNzR3K1RPd0kzREpNdW8xRlg4elxcbkZBUGJ6cXB0NUxRWEpiQVE1b1JvZXNnZndaczJrYmtCdTFzdldpckozWDY5YmQ3aVZaQjZUOWtBZXBqV3pMaFRcXG5WSXV5KzVHTmp5ZTd4bVRzMm1sR1Q5emZSV2d5cFVqU3RhcWFRdW1UaHRQdzhlSHFaaWZQTlp3OWRMMGNGU3BtXFxuWkpVaVpLcUdUREZtSHNHMm1kd2IzakdLRnhueXZ5N3luNzFWWlAveE1WVXh3WWhkSXFTRFdhN1Z1YXllZ2hhSFxcbjB3VXIwcGt1Q29OOG1ycFV0eUdPcjNGWllZUDB1Z2xmY2ltR0l2eHR6UUtCZ1FEdTZ5bDJ6ODdzdTFxNVVxcWhcXG5yMCtiWVpWTUNRdmV2ZDBXckpNMTZ0end4elN2VC9tL2tZQXpPd0pyVXgwS01ZNkdpNWRtU01VWlF0R3l0SzJBXFxuSGZTRjhxUEJqM3Q1emdhbmN1WGdwTVkwcjNIS1p5OWFURVNDSmtaN2UvS3NMem9ObTZ2bGVDbHVMQ0JIODJBdVxcbm5mT01NVW1udmZiV0dWVnUzR0VpeWI2UXV3S0JnUURHTWhITCtuQ1BiTm91YjBKSmNkTHFkNWVWOWcyKzJQRmRcXG5WbE5TL3lLT2NGSUhPM2xzSWZ1Z2lsK1AwYmtQK1g4OVR1ZjNqZW83SC9tTjg3dlZiZDBIdlhmaTZSQWU1SERxXFxuVENyTE9ET01wc3lqS3g1OXQ1V1FlSklZbDhrNFE1UVNuWEZnSWltSndNN0ZCQ1NMdGNMazl0WkRzSExReFNDRlxcblFoM2ViT2JSY3dLQmdRRFNvQjU5ejlYc2ZYOE53Z01MWnpJWEdZQTArQVN1NlZMdm1sUnRSQkJqZERyT0V3TnFcXG5EeXVsL20remppSWJ5blNMeUtSQVdBYnFyaTJRRGhpbXljRzRGS0NwRTRVWGJMb1JCUW9EY1VBTFVtQk92NGpQXFxuWWsxREw5c1RJY0plYVlRVVd4aS93NTlDc1VRRUtscXd2aTduZU13bVJTSkd2UzdEL1NUbE5sWDU0UUtCZ0hjOFxcbndFQTdsMlJ5VklFREpwb1JCSmRUQTd1UW9JeGs4REQ3TW40SVNMM3hEU2lVdTJRMnZhL0VEK0h5aHFmNXJuY3ZcXG45WmFWcG9tVG53dXJ5eUdJU3lYUTgwTnNlK3BaL1NTNFZqYVV4VTZsT3hBZmJPU3RnaW04b0FoenFQZFVrTXp5XFxuTTdkbVZoOHVCRGU3V2xGRE5OR1RQeXpTQndGYTEwblVrU3V6ME5uSkFvR0JBTnFMakR2Q04xMjc5Qnd5MDZqWVxcbjdqem1WRURUOEhpZEFpNkM4NUVRTWpheTZlc3VYM0tTVFdFSWhjZnlxTkhUUWZ2cFlIOXFoem5ySXZIR0N3YmdcXG45VlBXY0ltZGVyWXZiWURrM2ZKQmlSUGRWTitkcG00NGZrdFNaU0s3VnY2dkxOOTNSR05JZmZXWjM3ejhob3lnXFxuaWVZUnRIQWxnUHkwaERXemlIREVyKzhYXFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICBcImNsaWVudF9lbWFpbFwiOiBcInhwLWluc3RhbGwtdGVzdEBjcm9zc3BsYW5lLXBsYXlncm91bmQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb21cIixcbiAgXCJjbGllbnRfaWRcIjogXCIxMTUyMzkzNjE5MzI0MDExMjg5NTlcIixcbiAgXCJhdXRoX3VyaVwiOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoXCIsXG4gIFwidG9rZW5fdXJpXCI6IFwiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW5cIixcbiAgXCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHNcIixcbiAgXCJjbGllbnRfeDUwOV9jZXJ0X3VybFwiOiBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkveHAtaW5zdGFsbC10ZXN0JTQwY3Jvc3NwbGFuZS1wbGF5Z3JvdW5kLmlhbS5nc2VydmljZWFjY291bnQuY29tXCIsXG4gIFwidW5pdmVyc2VfZG9tYWluXCI6IFwiZ29vZ2xlYXBpcy5jb21cIlxufSIsImVtYWlsIjoieHAtaW5zdGFsbC10ZXN0QGNyb3NzcGxhbmUtcGxheWdyb3VuZC5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsImF1dGgiOiJYMnB6YjI1ZmEyVjVPbnNLSUNBaWRIbHdaU0k2SUNKelpYSjJhV05sWDJGalkyOTFiblFpTEFvZ0lDSndjbTlxWldOMFgybGtJam9nSW1OeWIzTnpjR3hoYm1VdGNHeGhlV2R5YjNWdVpDSXNDaUFnSW5CeWFYWmhkR1ZmYTJWNVgybGtJam9nSWpNNE9UWmlOamcwTldSaVltWTNOelF6T1dFd1lqWTNOelF5WXpZNVpqaG1abUZqT1RkaU9HRWlMQW9nSUNKd2NtbDJZWFJsWDJ0bGVTSTZJQ0l0TFMwdExVSkZSMGxPSUZCU1NWWkJWRVVnUzBWWkxTMHRMUzFjYmsxSlNVVjJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFWTkRRa3RuZDJkblUydEJaMFZCUVc5SlFrRlJRelFyU25saUsyVlJXbmRqYkRaY2JuRlJjV05aYTNSaVpHcHdaV3h2TmxSNE4xZDZNa3RsUlRsR1ptNVdjRE5hUjFObk4zcHdja1JPSzA0dlJFcDNiMGMzTDJjclp5OTRaRVJPVUV0VE9EZGNibk1yVXk4d2FsRnFiMUZGTkRoMmFrOVNablZPYXpnMVZubHBjSGN3ZGpVclIzaEJibUprV0VWTE5XbEJNWE00T1dGaWMwRnNMMDR3TjNKa2VuWldPRGhjYmsxTFdGaDVORGxCTlRKc05TODVUVlYzT1ZZdk5UQXlXRWRNWjBWSFVsWnJOVzVtYmpKSlRqVjFWV1JEUkZodFNtRnVkM2h1TWpKc2JGSmpla3hSY1ZKY2JtSmhTQzg0WkUxYVYyNURXVFl4YnpGNmJXWXJhQ3RSWVVNeFRsQnVVMWhyYlVwYVkybHZjREJMWnk5NVFYaHBjM05STmxoSVJtcDVXVzlxTURSNmRHRmNibTFuVVdsTE55ODNhM0pzTkZaRmFIWTNkbUpqYW5Rd2RUbDBiR0p1VVhKemEyeEtXSGhtVVVOeFRHWjZPRnBqYjJSRGFERnRNazVGWWxkdWFteExkVWhjYmxsTlVXZDRZVGhDUVdkTlFrRkJSVU5uWjBWQlJqa3dSRWd5UW1FelJGQlVSVmc0Vkdac09UQkNNbGN5V0VKUGFXRXhRbVJyWTJ4SGRUTkdiV3RrVEhKY2JqVkhSa3BtYjFoSFJUVTVNMDk1U0dWV05VcFZOaXR3TWl0b2FXRnpaMFJJVG1wWFkwMXNPR3hIVGl0b2NqYzBkeXRVVDNkSk0wUktUWFZ2TVVaWU9IcGNia1pCVUdKNmNYQjBOVXhSV0VwaVFWRTFiMUp2WlhOblpuZGFjekpyWW10Q2RURnpkbGRwY2tveldEWTVZbVEzYVZaYVFqWlVPV3RCWlhCcVYzcE1hRlJjYmxaSmRYa3JOVWRPYW5sbE4zaHRWSE15Yld4SFZEbDZabEpYWjNsd1ZXcFRkR0Z4WVZGMWJWUm9kRkIzT0dWSWNWcHBabEJPV25jNVpFd3dZMFpUY0cxY2JscEtWV2xhUzNGSFZFUkdiVWh6UnpKdFpIZGlNMnBIUzBaNGJubDJlVGQ1YmpjeFZscFFMM2hOVmxWNGQxbG9aRWx4VTBSWFlUZFdkV0Y1Wldkb1lVaGNiakIzVlhJd2NHdDFRMjlPT0cxeWNGVjBlVWRQY2pOR1dsbFpVREIxWjJ4bVkybHRSMGwyZUhSNlVVdENaMUZFZFRaNWJESjZPRGR6ZFRGeE5WVnhjV2hjYm5Jd0sySlpXbFpOUTFGMlpYWmtNRmR5U2sweE5uUjZkM2g2VTNaVUwyMHZhMWxCZWs5M1NuSlZlREJMVFZrMlIyazFaRzFUVFZWYVVYUkhlWFJMTWtGY2JraG1VMFk0Y1ZCQ2FqTjBOWHBuWVc1amRWaG5jRTFaTUhJelNFdGFlVGxoVkVWVFEwcHJXamRsTDB0elRIcHZUbTAyZG14bFEyeDFURU5DU0RneVFYVmNibTVtVDAxTlZXMXVkbVppVjBkV1ZuVXpSMFZwZVdJMlVYVjNTMEpuVVVSSFRXaElUQ3R1UTFCaVRtOTFZakJLU21Oa1RIRmtOV1ZXT1djeUt6SlFSbVJjYmxac1RsTXZlVXRQWTBaSlNFOHpiSE5KWm5WbmFXd3JVREJpYTFBcldEZzVWSFZtTTJwbGJ6ZElMMjFPT0RkMlZtSmtNRWgyV0dacE5sSkJaVFZJUkhGY2JsUkRja3hQUkU5TmNITjVha3Q0TlRsME5WZFJaVXBKV1d3NGF6UlJOVkZUYmxoR1owbHBiVXAzVFRkR1FrTlRUSFJqVEdzNWRGcEVjMGhNVVhoVFEwWmNibEZvTTJWaVQySlNZM2RMUW1kUlJGTnZRalU1ZWpsWWMyWllPRTUzWjAxTVducEpXRWRaUVRBclFWTjFObFpNZG0xc1VuUlNRa0pxWkVSeVQwVjNUbkZjYmtSNWRXd3ZiU3Q2YW1sSllubHVVMHg1UzFKQlYwRmljWEpwTWxGRWFHbHRlV05ITkVaTFEzQkZORlZZWWt4dlVrSlJiMFJqVlVGTVZXMUNUM1kwYWxCY2JsbHJNVVJNT1hOVVNXTktaV0ZaVVZWWGVHa3ZkelU1UTNOVlVVVkxiSEYzZG1rM2JtVk5kMjFTVTBwSGRsTTNSQzlUVkd4T2JGZzFORkZMUW1kSVl6aGNibmRGUVRkc01sSjVWa2xGUkVwd2IxSkNTbVJVUVRkMVVXOUplR3M0UkVRM1RXNDBTVk5NTTNoRVUybFZkVEpSTW5aaEwwVkVLMGg1YUhGbU5YSnVZM1pjYmpsYVlWWndiMjFVYm5kMWNubDVSMGxUZVZoUk9EQk9jMlVyY0ZvdlUxTTBWbXBoVlhoVk5teFBlRUZtWWs5VGRHZHBiVGh2UVdoNmNWQmtWV3ROZW5sY2JrMDNaRzFXYURoMVFrUmxOMWRzUmtST1RrZFVVSGw2VTBKM1JtRXhNRzVWYTFOMWVqQk9ia3BCYjBkQ1FVNXhUR3BFZGtOT01USTNPVUozZVRBMmFsbGNiamRxZW0xV1JVUlVPRWhwWkVGcE5rTTROVVZSVFdwaGVUWmxjM1ZZTTB0VFZGZEZTV2hqWm5seFRraFVVV1oyY0ZsSU9YRm9lbTV5U1haSVIwTjNZbWRjYmpsV1VGZGpTVzFrWlhKWmRtSlpSR3N6WmtwQ2FWSlFaRlpPSzJSd2JUUTBabXQwVTFwVFN6ZFdkaloyVEU0NU0xSkhUa2xtWmxkYU16ZDZPR2h2ZVdkY2JtbGxXVkowU0VGc1oxQjVNR2hFVjNwcFNFUkZjaXM0V0Z4dUxTMHRMUzFGVGtRZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFZ4dUlpd0tJQ0FpWTJ4cFpXNTBYMlZ0WVdsc0lqb2dJbmh3TFdsdWMzUmhiR3d0ZEdWemRFQmpjbTl6YzNCc1lXNWxMWEJzWVhsbmNtOTFibVF1YVdGdExtZHpaWEoyYVdObFlXTmpiM1Z1ZEM1amIyMGlMQW9nSUNKamJHbGxiblJmYVdRaU9pQWlNVEUxTWpNNU16WXhPVE15TkRBeE1USTRPVFU1SWl3S0lDQWlZWFYwYUY5MWNta2lPaUFpYUhSMGNITTZMeTloWTJOdmRXNTBjeTVuYjI5bmJHVXVZMjl0TDI4dmIyRjFkR2d5TDJGMWRHZ2lMQW9nSUNKMGIydGxibDkxY21raU9pQWlhSFIwY0hNNkx5OXZZWFYwYURJdVoyOXZaMnhsWVhCcGN5NWpiMjB2ZEc5clpXNGlMQW9nSUNKaGRYUm9YM0J5YjNacFpHVnlYM2cxTURsZlkyVnlkRjkxY213aU9pQWlhSFIwY0hNNkx5OTNkM2N1WjI5dloyeGxZWEJwY3k1amIyMHZiMkYxZEdneUwzWXhMMk5sY25Seklpd0tJQ0FpWTJ4cFpXNTBYM2cxTURsZlkyVnlkRjkxY213aU9pQWlhSFIwY0hNNkx5OTNkM2N1WjI5dloyeGxZWEJwY3k1amIyMHZjbTlpYjNRdmRqRXZiV1YwWVdSaGRHRXZlRFV3T1M5NGNDMXBibk4wWVd4c0xYUmxjM1FsTkRCamNtOXpjM0JzWVc1bExYQnNZWGxuY205MWJtUXVhV0Z0TG1kelpYSjJhV05sWVdOamIzVnVkQzVqYjIwaUxBb2dJQ0oxYm1sMlpYSnpaVjlrYjIxaGFXNGlPaUFpWjI5dloyeGxZWEJwY3k1amIyMGlDbjA9In19fQ==