
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: infrastructuredefinitions.apiextensions.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: apiextensions.crossplane.io
  names:
    kind: InfrastructureDefinition
    listKind: InfrastructureDefinitionList
    plural: infrastructuredefinitions
    singular: infrastructuredefinition
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: InfrastructureDefinition is used to define a resource claim that
        can be scheduled to one of the available compatible compositions.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: InfrastructureDefinitionSpec specifies the desired state of
            the definition.
          properties:
            connectionSecretKeys:
              description: ConnectionSecretKeys is the list of keys that will be exposed
                to the end user of the defined kind.
              items:
                type: string
              type: array
            crdSpecTemplate:
              description: CRDSpecTemplate is the base CRD template. The final CRD
                will have additional fields to the base template to accommodate Crossplane
                machinery.
              properties:
                additionalPrinterColumns:
                  description: additionalPrinterColumns specifies additional columns
                    returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                    for details. If present, this field configures columns for all
                    versions. Top-level and per-version columns are mutually exclusive.
                    If no top-level or per-version columns are specified, a single
                    column displaying the age of the custom resource is used.
                  items:
                    description: CustomResourceColumnDefinition specifies a column
                      for server side printing.
                    properties:
                      JSONPath:
                        description: JSONPath is a simple JSON path (i.e. with array
                          notation) which is evaluated against each custom resource
                          to produce the value for this column.
                        type: string
                      description:
                        description: description is a human readable description of
                          this column.
                        type: string
                      format:
                        description: format is an optional OpenAPI type definition
                          for this column. The 'name' format is applied to the primary
                          identifier column to assist in clients identifying column
                          is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                          for details.
                        type: string
                      name:
                        description: name is a human readable name for the column.
                        type: string
                      priority:
                        description: priority is an integer defining the relative
                          importance of this column compared to others. Lower numbers
                          are considered higher priority. Columns that may be omitted
                          in limited space scenarios should be given a priority greater
                          than 0.
                        format: int32
                        type: integer
                      type:
                        description: type is an OpenAPI type definition for this column.
                          See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                          for details.
                        type: string
                    required:
                    - JSONPath
                    - name
                    - type
                    type: object
                  type: array
                conversion:
                  description: conversion defines conversion settings for the CRD.
                  properties:
                    conversionReviewVersions:
                      description: conversionReviewVersions is an ordered list of
                        preferred `ConversionReview` versions the Webhook expects.
                        The API server will use the first version in the list which
                        it supports. If none of the versions specified in this list
                        are supported by API server, conversion will fail for the
                        custom resource. If a persisted Webhook configuration specifies
                        allowed versions and does not include any versions known to
                        the API Server, calls to the webhook will fail. Defaults to
                        `["v1beta1"]`.
                      items:
                        type: string
                      type: array
                    strategy:
                      description: 'strategy specifies how custom resources are converted
                        between versions. Allowed values are: - `None`: The converter
                        only change the apiVersion and would not touch any other field
                        in the custom resource. - `Webhook`: API Server will call
                        to an external webhook to do the conversion. Additional information   is
                        needed for this option. This requires spec.preserveUnknownFields
                        to be false, and spec.conversion.webhookClientConfig to be
                        set.'
                      type: string
                    webhookClientConfig:
                      description: webhookClientConfig is the instructions for how
                        to call the webhook if strategy is `Webhook`. Required when
                        `strategy` is set to `Webhook`.
                      properties:
                        caBundle:
                          description: caBundle is a PEM encoded CA bundle which will
                            be used to validate the webhook's server certificate.
                            If unspecified, system trust roots on the apiserver are
                            used.
                          format: byte
                          type: string
                        service:
                          description: "service is a reference to the service for
                            this webhook. Either service or url must be specified.
                            \n If the webhook is running within the cluster, then
                            you should use `service`."
                          properties:
                            name:
                              description: name is the name of the service. Required
                              type: string
                            namespace:
                              description: namespace is the namespace of the service.
                                Required
                              type: string
                            path:
                              description: path is an optional URL path at which the
                                webhook will be contacted.
                              type: string
                            port:
                              description: port is an optional service port at which
                                the webhook will be contacted. `port` should be a
                                valid port number (1-65535, inclusive). Defaults to
                                443 for backward compatibility.
                              format: int32
                              type: integer
                          required:
                          - name
                          - namespace
                          type: object
                        url:
                          description: "url gives the location of the webhook, in
                            standard URL form (`scheme://host:port/path`). Exactly
                            one of `url` or `service` must be specified. \n The `host`
                            should not refer to a service running in the cluster;
                            use the `service` field instead. The host might be resolved
                            via external DNS in some apiservers (e.g., `kube-apiserver`
                            cannot resolve in-cluster DNS as that would be a layering
                            violation). `host` may also be an IP address. \n Please
                            note that using `localhost` or `127.0.0.1` as a `host`
                            is risky unless you take great care to run this webhook
                            on all hosts which run an apiserver which might need to
                            make calls to this webhook. Such installs are likely to
                            be non-portable, i.e., not easy to turn up in a new cluster.
                            \n The scheme must be \"https\"; the URL must begin with
                            \"https://\". \n A path is optional, and if present may
                            be any string permissible in a URL. You may use the path
                            to pass an arbitrary string to the webhook, for example,
                            a cluster identifier. \n Attempting to use a user or basic
                            auth e.g. \"user:password@\" is not allowed. Fragments
                            (\"#...\") and query parameters (\"?...\") are not allowed,
                            either."
                          type: string
                      type: object
                  required:
                  - strategy
                  type: object
                group:
                  description: group is the API group of the defined custom resource.
                    The custom resources are served under `/apis/<group>/...`. Must
                    match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
                  type: string
                names:
                  description: names specify the resource and kind names for the custom
                    resource.
                  properties:
                    categories:
                      description: categories is a list of grouped resources this
                        custom resource belongs to (e.g. 'all'). This is published
                        in API discovery documents, and used by clients to support
                        invocations like `kubectl get all`.
                      items:
                        type: string
                      type: array
                    kind:
                      description: kind is the serialized kind of the resource. It
                        is normally CamelCase and singular. Custom resource instances
                        will use this value as the `kind` attribute in API calls.
                      type: string
                    listKind:
                      description: listKind is the serialized kind of the list for
                        this resource. Defaults to "`kind`List".
                      type: string
                    plural:
                      description: plural is the plural name of the resource to serve.
                        The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                        Must match the name of the CustomResourceDefinition (in the
                        form `<names.plural>.<group>`). Must be all lowercase.
                      type: string
                    shortNames:
                      description: shortNames are short names for the resource, exposed
                        in API discovery documents, and used by clients to support
                        invocations like `kubectl get <shortname>`. It must be all
                        lowercase.
                      items:
                        type: string
                      type: array
                    singular:
                      description: singular is the singular name of the resource.
                        It must be all lowercase. Defaults to lowercased `kind`.
                      type: string
                  required:
                  - kind
                  - plural
                  type: object
                preserveUnknownFields:
                  description: 'preserveUnknownFields indicates that object fields
                    which are not specified in the OpenAPI schema should be preserved
                    when persisting to storage. apiVersion, kind, metadata and known
                    fields inside metadata are always preserved. If false, schemas
                    must be defined for all versions. Defaults to true in v1beta for
                    backwards compatibility. Deprecated: will be required to be false
                    in v1. Preservation of unknown fields can be specified in the
                    validation schema using the `x-kubernetes-preserve-unknown-fields:
                    true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields
                    for details.'
                  type: boolean
                subresources:
                  description: subresources specify what subresources the defined
                    custom resource has. If present, this field configures subresources
                    for all versions. Top-level and per-version subresources are mutually
                    exclusive.
                  properties:
                    scale:
                      description: scale indicates the custom resource should serve
                        a `/scale` subresource that returns an `autoscaling/v1` Scale
                        object.
                      properties:
                        labelSelectorPath:
                          description: 'labelSelectorPath defines the JSON path inside
                            of a custom resource that corresponds to Scale `status.selector`.
                            Only JSON paths without the array notation are allowed.
                            Must be a JSON Path under `.status` or `.spec`. Must be
                            set to work with HorizontalPodAutoscaler. The field pointed
                            by this JSON path must be a string field (not a complex
                            selector struct) which contains a serialized label selector
                            in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                            If there is no value under the given path in the custom
                            resource, the `status.selector` value in the `/scale`
                            subresource will default to the empty string.'
                          type: string
                        specReplicasPath:
                          description: specReplicasPath defines the JSON path inside
                            of a custom resource that corresponds to Scale `spec.replicas`.
                            Only JSON paths without the array notation are allowed.
                            Must be a JSON Path under `.spec`. If there is no value
                            under the given path in the custom resource, the `/scale`
                            subresource will return an error on GET.
                          type: string
                        statusReplicasPath:
                          description: statusReplicasPath defines the JSON path inside
                            of a custom resource that corresponds to Scale `status.replicas`.
                            Only JSON paths without the array notation are allowed.
                            Must be a JSON Path under `.status`. If there is no value
                            under the given path in the custom resource, the `status.replicas`
                            value in the `/scale` subresource will default to 0.
                          type: string
                      required:
                      - specReplicasPath
                      - statusReplicasPath
                      type: object
                    status:
                      description: 'status indicates the custom resource should serve
                        a `/status` subresource. When enabled: 1. requests to the
                        custom resource primary endpoint ignore changes to the `status`
                        stanza of the object. 2. requests to the custom resource `/status`
                        subresource ignore changes to anything other than the `status`
                        stanza of the object.'
                      type: object
                  type: object
                validation:
                  description: validation describes the schema used for validation
                    and pruning of the custom resource. If present, this validation
                    schema is used to validate all versions. Top-level and per-version
                    schemas are mutually exclusive.
                  properties:
                    openAPIV3Schema:
                      description: openAPIV3Schema is the OpenAPI v3 schema to use
                        for validation and pruning.
                      type: object
                  type: object
                version:
                  description: 'version is the API version of the defined custom resource.
                    The custom resources are served under `/apis/<group>/<version>/...`.
                    Must match the name of the first item in the `versions` list if
                    `version` and `versions` are both specified. Optional if `versions`
                    is specified. Deprecated: use `versions` instead.'
                  type: string
                versions:
                  description: 'versions is the list of all API versions of the defined
                    custom resource. Optional if `version` is specified. The name
                    of the first item in the `versions` list must match the `version`
                    field if `version` and `versions` are both specified. Version
                    names are used to compute the order in which served versions are
                    listed in API discovery. If the version string is "kube-like",
                    it will sort above non "kube-like" version strings, which are
                    ordered lexicographically. "Kube-like" versions start with a "v",
                    then are followed by a number (the major version), then optionally
                    the string "alpha" or "beta" and another number (the minor version).
                    These are sorted first by GA > beta > alpha (where GA is a version
                    with no suffix such as beta or alpha), and then by comparing major
                    version, then minor version. An example sorted list of versions:
                    v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2,
                    foo1, foo10.'
                  items:
                    description: CustomResourceDefinitionVersion describes a version
                      for CRD.
                    properties:
                      additionalPrinterColumns:
                        description: additionalPrinterColumns specifies additional
                          columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                          for details. Top-level and per-version columns are mutually
                          exclusive. Per-version columns must not all be set to identical
                          values (top-level columns should be used instead). If no
                          top-level or per-version columns are specified, a single
                          column displaying the age of the custom resource is used.
                        items:
                          description: CustomResourceColumnDefinition specifies a
                            column for server side printing.
                          properties:
                            JSONPath:
                              description: JSONPath is a simple JSON path (i.e. with
                                array notation) which is evaluated against each custom
                                resource to produce the value for this column.
                              type: string
                            description:
                              description: description is a human readable description
                                of this column.
                              type: string
                            format:
                              description: format is an optional OpenAPI type definition
                                for this column. The 'name' format is applied to the
                                primary identifier column to assist in clients identifying
                                column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                                for details.
                              type: string
                            name:
                              description: name is a human readable name for the column.
                              type: string
                            priority:
                              description: priority is an integer defining the relative
                                importance of this column compared to others. Lower
                                numbers are considered higher priority. Columns that
                                may be omitted in limited space scenarios should be
                                given a priority greater than 0.
                              format: int32
                              type: integer
                            type:
                              description: type is an OpenAPI type definition for
                                this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                                for details.
                              type: string
                          required:
                          - JSONPath
                          - name
                          - type
                          type: object
                        type: array
                      name:
                        description: name is the version name, e.g. “v1”, “v2beta1”,
                          etc. The custom resources are served under this version
                          at `/apis/<group>/<version>/...` if `served` is true.
                        type: string
                      schema:
                        description: schema describes the schema used for validation
                          and pruning of this version of the custom resource. Top-level
                          and per-version schemas are mutually exclusive. Per-version
                          schemas must not all be set to identical values (top-level
                          validation schema should be used instead).
                        properties:
                          openAPIV3Schema:
                            description: openAPIV3Schema is the OpenAPI v3 schema
                              to use for validation and pruning.
                            type: object
                        type: object
                      served:
                        description: served is a flag enabling/disabling this version
                          from being served via REST APIs
                        type: boolean
                      storage:
                        description: storage indicates this version should be used
                          when persisting custom resources to storage. There must
                          be exactly one version with storage=true.
                        type: boolean
                      subresources:
                        description: subresources specify what subresources this version
                          of the defined custom resource have. Top-level and per-version
                          subresources are mutually exclusive. Per-version subresources
                          must not all be set to identical values (top-level subresources
                          should be used instead).
                        properties:
                          scale:
                            description: scale indicates the custom resource should
                              serve a `/scale` subresource that returns an `autoscaling/v1`
                              Scale object.
                            properties:
                              labelSelectorPath:
                                description: 'labelSelectorPath defines the JSON path
                                  inside of a custom resource that corresponds to
                                  Scale `status.selector`. Only JSON paths without
                                  the array notation are allowed. Must be a JSON Path
                                  under `.status` or `.spec`. Must be set to work
                                  with HorizontalPodAutoscaler. The field pointed
                                  by this JSON path must be a string field (not a
                                  complex selector struct) which contains a serialized
                                  label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                                  If there is no value under the given path in the
                                  custom resource, the `status.selector` value in
                                  the `/scale` subresource will default to the empty
                                  string.'
                                type: string
                              specReplicasPath:
                                description: specReplicasPath defines the JSON path
                                  inside of a custom resource that corresponds to
                                  Scale `spec.replicas`. Only JSON paths without the
                                  array notation are allowed. Must be a JSON Path
                                  under `.spec`. If there is no value under the given
                                  path in the custom resource, the `/scale` subresource
                                  will return an error on GET.
                                type: string
                              statusReplicasPath:
                                description: statusReplicasPath defines the JSON path
                                  inside of a custom resource that corresponds to
                                  Scale `status.replicas`. Only JSON paths without
                                  the array notation are allowed. Must be a JSON Path
                                  under `.status`. If there is no value under the
                                  given path in the custom resource, the `status.replicas`
                                  value in the `/scale` subresource will default to
                                  0.
                                type: string
                            required:
                            - specReplicasPath
                            - statusReplicasPath
                            type: object
                          status:
                            description: 'status indicates the custom resource should
                              serve a `/status` subresource. When enabled: 1. requests
                              to the custom resource primary endpoint ignore changes
                              to the `status` stanza of the object. 2. requests to
                              the custom resource `/status` subresource ignore changes
                              to anything other than the `status` stanza of the object.'
                            type: object
                        type: object
                    required:
                    - name
                    - served
                    - storage
                    type: object
                  type: array
              required:
              - group
              - names
              type: object
          type: object
        status:
          description: InfrastructureDefinitionStatus shows the observed state of
            the definition.
          properties:
            conditions:
              description: Conditions of the resource.
              items:
                description: A Condition that may apply to a resource.
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time this condition
                      transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: A Message containing details about this condition's
                      last transition from one status to another, if any.
                    type: string
                  reason:
                    description: A Reason for this condition's last transition from
                      one status to another.
                    type: string
                  status:
                    description: Status of this condition; is it currently True, False,
                      or Unknown?
                    type: string
                  type:
                    description: Type of this condition. At most one of each condition
                      type may apply to a resource at any point in time.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
