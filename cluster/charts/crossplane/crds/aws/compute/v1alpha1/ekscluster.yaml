apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: eksclusters.compute.aws.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.bindingPhase
    name: STATUS
    type: string
  - JSONPath: .status.state
    name: STATE
    type: string
  - JSONPath: .status.clusterName
    name: CLUSTER-NAME
    type: string
  - JSONPath: .status.endpoint
    name: ENDPOINT
    type: string
  - JSONPath: .spec.classRef.name
    name: CLUSTER-CLASS
    type: string
  - JSONPath: .spec.location
    name: LOCATION
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.aws.crossplane.io
  names:
    kind: EKSCluster
    plural: eksclusters
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            claimRef:
              type: object
            classRef:
              type: object
            cliInput:
              description: CLIInput --cli-input-json  (string) Performs service operation
                based on the JSON string provided. The JSON string follows the format
                provided by  --gen- erate-cli-skeleton.  If  other  arguments  are  provided
                on the command line, the CLI values will override the JSON-provided
                values. It is  not possible to pass arbitrary binary values using
                a JSON-provided value as the string will be taken literally.
              type: string
            clientRequestToken:
              description: ClientRequestToken --client-request-token (string) Unique,
                case-sensitive identifier you provide to ensure the  idempo- tency
                of the request.
              type: string
            clusterVersion:
              description: ClusterVersion --kubernetes-version (string) The desired
                Kubernetes version for your cluster. If you do not spec- ify a value
                here, the latest version  available  in  Amazon  EKS  is used.
              type: string
            generateCLISkeleton:
              description: GenerateCLISkeleton --generate-cli-skeleton (string) Prints
                a  JSON  skeleton  to  standard output without sending an API request.
                If provided with no value or the value input, prints a sample input
                JSON that can be used as an argument for  --cli-input-json.  If provided
                with the value output, it validates the command inputs and returns
                a sample output JSON for that command.
              type: string
            mapRoles:
              description: 'MapRoles - each item maps an aws role to kubernetes groups
                Default role that allows nodes access to communicate with master is
                autogenerated when a node pool comes online. Additional map roles
                configuration are documented in the link below https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md  #
                map arn:aws:iam::000000000000:role/KubernetesAdmin to cluster admin
                - rolearn: arn:aws:iam::000000000000:role/KubernetesAdmin   username:
                kubernetes-admin    groups:      - system:masters'
              items:
                properties:
                  groups:
                    items:
                      type: string
                    type: array
                  rolearn:
                    type: string
                  username:
                    type: string
                required:
                - rolearn
                - username
                - groups
                type: object
              type: array
            mapUsers:
              description: 'MapUsers - each item maps an aws users to kubernetes groups
                Additional map users configuration options are documented in the link
                below https://github.com/kubernetes-sigs/aws-iam-authenticator/blob/master/README.md  #
                map user IAM user Alice in 000000000000 to user "alice" in group "system:masters"
                - userarn: arn:aws:iam::000000000000:user/Alice  username: alice  groups:    -
                system:masters'
              items:
                properties:
                  groups:
                    items:
                      type: string
                    type: array
                  userarn:
                    type: string
                  username:
                    type: string
                required:
                - userarn
                - username
                - groups
                type: object
              type: array
            providerRef:
              type: object
            publishConnectionTo:
              properties:
                configMapRef:
                  description: ConfigMapReference specifies a local ConfigMap to which
                    non-sensitive connection details such as usernames, addresses,
                    and ports will be published. The ConfigMap should not exist; it
                    will be created by Crossplane.
                  type: object
                secretRef:
                  description: ServiceReference specifies a local Secret to which
                    sensitive connection details such as passwords and certificates
                    will be published. The Secret should not exist; it will be created
                    by Crossplane.
                  type: object
                serviceRef:
                  description: ServiceReference specifies a local ExternalName type
                    Service that will publish this resource's connection endpoint.
                    The Service should not exist; it will be created by Crossplane.
                  type: object
              type: object
            reclaimPolicy:
              type: string
            region:
              description: Region for EKS Cluster
              enum:
              - us-west-2
              - us-east-1
              - eu-west-1
              type: string
            roleARN:
              description: 'RoleARN --role-arn The Amazon Resource Name (ARN) of the
                IAM role that provides permis- sions for Amazon EKS to make calls
                to other AWS  API  operations  on your  behalf.  For more information,
                see Amazon EKS Service IAM Role in the * Amazon EKS User Guide * .
                TODO: we could simplify this to roleName.'
              type: string
            securityGroupIds:
              description: 'SecurityGroupIds Syntax: securityGroupIds=string,string,'
              items:
                type: string
              type: array
            subnetIds:
              description: 'SubnetIds Syntax: subnetIds=string,string,'
              items:
                type: string
              type: array
            vpcId:
              description: ResourcesVPCConfig --resources-vpc-config (structure) The
                VPC subnets and security groups  used  by  the  cluster  control plane.  Amazon  EKS
                VPC resources have specific requirements to work properly with Kubernetes.
                For more information, see Cluster VPC Con- siderations  and Cluster
                Security Group Considerations in the Amazon EKS User Guide . You must
                specify at  least  two  subnets.  You  may specify  up  to  5  security
                groups, but we recommend that you use a dedicated security group for
                your cluster control plane.  VpcID of EKS cluster
              type: string
            workerNodes:
              description: WorkerNodes configuration for cloudformation
              properties:
                bootstrapArguments:
                  description: 'BootstrapArguments Arguments to pass to the bootstrap
                    script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
                    Default: ""'
                  type: string
                clusterControlPlaneSecurityGroup:
                  description: ClusterControlPlaneSecurityGroup The security group
                    of the cluster control plane.
                  type: string
                keyName:
                  description: KeyName The EC2 Key Pair to allow SSH access to the
                    instances
                  type: string
                nodeAutoScalingGroupMaxSize:
                  description: 'NodeAutoScalingGroupMaxSize Maximum size of Node Group
                    ASG. Default: 3'
                  format: int64
                  type: integer
                nodeAutoScalingGroupMinSize:
                  description: NodeAutoScalingGroupMinSize Minimum size of Node Group
                    ASG. default 1
                  format: int64
                  type: integer
                nodeGroupName:
                  description: NodeGroupName Unique identifier for the Node Group.
                  type: string
                nodeImageId:
                  description: NodeImageId The EC2 Key Pair to allow SSH access to
                    the instances defaults to region standard AMI
                  type: string
                nodeInstanceType:
                  description: NodeInstanceType EC2 instance type for the node instances
                  enum:
                  - t2.small
                  - t2.medium
                  - t2.large
                  - t2.xlarge
                  - t2.2xlarge
                  - t3.nano
                  - t3.micro
                  - t3.small
                  - t3.medium
                  - t3.large
                  - t3.xlarge
                  - t3.2xlarge
                  - m3.medium
                  - m3.large
                  - m3.xlarge
                  - m3.2xlarge
                  - m4.large
                  - m4.xlarge
                  - m4.2xlarge
                  - m4.4xlarge
                  - m4.10xlarge
                  - m5.large
                  - m5.xlarge
                  - m5.2xlarge
                  - m5.4xlarge
                  - m5.12xlarge
                  - m5.24xlarge
                  - c4.large
                  - c4.xlarge
                  - c4.2xlarge
                  - c4.4xlarge
                  - c4.8xlarge
                  - c5.large
                  - c5.xlarge
                  - c5.2xlarge
                  - c5.4xlarge
                  - c5.9xlarge
                  - c5.18xlarge
                  - i3.large
                  - i3.xlarge
                  - i3.2xlarge
                  - i3.4xlarge
                  - i3.8xlarge
                  - i3.16xlarge
                  - r3.xlarge
                  - r3.2xlarge
                  - r3.4xlarge
                  - r3.8xlarge
                  - r4.large
                  - r4.xlarge
                  - r4.2xlarge
                  - r4.4xlarge
                  - r4.8xlarge
                  - r4.16xlarge
                  - x1.16xlarge
                  - x1.32xlarge
                  - p2.xlarge
                  - p2.8xlarge
                  - p2.16xlarge
                  - p3.2xlarge
                  - p3.8xlarge
                  - p3.16xlarge
                  - r5.large
                  - r5.xlarge
                  - r5.2xlarge
                  - r5.4xlarge
                  - r5.12xlarge
                  - r5.24xlarge
                  - r5d.large
                  - r5d.xlarge
                  - r5d.2xlarge
                  - r5d.4xlarge
                  - r5d.12xlarge
                  - r5d.24xlarge
                  - z1d.large
                  - z1d.xlarge
                  - z1d.2xlarge
                  - z1d.3xlarge
                  - z1d.6xlarge
                  - z1d.12xlarge
                  type: string
                nodeVolumeSize:
                  description: 'NodeVolumeSize Node volume size in GB Default: 20'
                  format: int64
                  type: integer
              required:
              - keyName
              - nodeInstanceType
              type: object
          required:
          - providerRef
          - region
          - roleARN
          - vpcId
          - subnetIds
          - securityGroupIds
          - workerNodes
          type: object
        status:
          properties:
            cloudformationStackId:
              description: CloudFormationStackID Stack-id
              type: string
            endpoint:
              description: Endpoint for cluster
              type: string
            resourceName:
              description: ClusterName identifier
              type: string
            state:
              description: State of the cluster (see status constants above)
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
