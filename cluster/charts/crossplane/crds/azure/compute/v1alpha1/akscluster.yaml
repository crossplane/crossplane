apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: aksclusters.compute.azure.crossplane.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.bindingPhase
    name: STATUS
    type: string
  - JSONPath: .status.state
    name: STATE
    type: string
  - JSONPath: .status.clusterName
    name: CLUSTER-NAME
    type: string
  - JSONPath: .status.endpoint
    name: ENDPOINT
    type: string
  - JSONPath: .spec.classRef.name
    name: CLUSTER-CLASS
    type: string
  - JSONPath: .spec.location
    name: LOCATION
    type: string
  - JSONPath: .spec.reclaimPolicy
    name: RECLAIM-POLICY
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: AGE
    type: date
  group: compute.azure.crossplane.io
  names:
    kind: AKSCluster
    plural: aksclusters
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            claimRef:
              type: object
            classRef:
              type: object
            disableRBAC:
              description: DisableRBAC determines whether RBAC will be disabled or
                enabled in the cluster.
              type: boolean
            dnsNamePrefix:
              description: DNSNamePrefix is the DNS name prefix to use with the hosted
                Kubernetes API server FQDN. You will use this to connect to the Kubernetes
                API when managing containers after creating the cluster.
              type: string
            location:
              description: Location is the Azure location that the cluster will be
                created in
              type: string
            nodeCount:
              description: NodeCount is the number of nodes that the cluster will
                initially be created with.  This can be scaled over time and defaults
                to 1.
              format: int64
              maximum: 100
              minimum: 0
              type: integer
            nodeVMSize:
              description: NodeVMSize is the name of the worker node VM size, e.g.,
                Standard_B2s, Standard_F2s_v2, etc. This value cannot be changed after
                cluster creation.
              type: string
            providerRef:
              type: object
            publishConnectionTo:
              properties:
                configMapRef:
                  description: ConfigMapReference specifies a local ConfigMap to which
                    non-sensitive connection details such as usernames, addresses,
                    and ports will be published. The ConfigMap should not exist; it
                    will be created by Crossplane.
                  type: object
                secretRef:
                  description: ServiceReference specifies a local Secret to which
                    sensitive connection details such as passwords and certificates
                    will be published. The Secret should not exist; it will be created
                    by Crossplane.
                  type: object
                serviceRef:
                  description: ServiceReference specifies a local ExternalName type
                    Service that will publish this resource's connection endpoint.
                    The Service should not exist; it will be created by Crossplane.
                  type: object
              type: object
            reclaimPolicy:
              type: string
            resourceGroupName:
              description: ResourceGroupName is the name of the resource group that
                the cluster will be created in
              type: string
            version:
              description: Version is the Kubernetes version that will be deployed
                to the cluster
              type: string
            writeServicePrincipalTo:
              description: WriteServicePrincipalSecretTo the specified Secret. The
                service principal is automatically generated and used by the AKS cluster
                to interact with other Azure resources.
              type: object
          required:
          - providerRef
          - resourceGroupName
          - location
          - version
          - nodeVMSize
          - dnsNamePrefix
          - writeServicePrincipalTo
          type: object
        status:
          properties:
            appObjectID:
              description: ApplicationObjectID is the object ID of the AD application
                the cluster uses for Azure APIs
              type: string
            clusterName:
              description: ClusterName is the name of the cluster as registered with
                the cloud provider
              type: string
            endpoint:
              description: Endpoint is the endpoint where the cluster can be reached
              type: string
            providerID:
              description: ProviderID is the external ID to identify this resource
                in the cloud provider
              type: string
            runningOperation:
              description: RunningOperation stores any current long running operation
                for this instance across reconciliation attempts.  This will be a
                serialized Azure AKS cluster API object that will be used to check
                the status and completion of the operation during each reconciliation.
                Once the operation has completed, this field will be cleared out.
              type: string
            servicePrincipalID:
              description: ServicePrincipalID is the ID of the service principal the
                AD application uses
              type: string
            state:
              description: State is the current state of the cluster
              type: string
          required:
          - endpoint
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
