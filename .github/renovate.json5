{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base"
  ],
// We only want renovate to rebase PRs when they have conflicts,
// default "auto" mode is not required.
  "rebaseWhen": "conflicted",
// The maximum number of PRs to be created in parallel
  "prConcurrentLimit": 5,
// The branches renovate should target
// PLEASE UPDATE THIS WHEN RELEASING.
  "baseBranches": ["master","release-1.10","release-1.11","release-1.12"],
  "ignorePaths": ["design/**"],
  "postUpdateOptions": ["gomodTidy"],
// By default renovate will auto detect whether semantic commits have been used
// in the recent history and comply with that, we explicitly disable it
  "semanticCommits": "disabled",
// All PRs should have a label
  "labels": ["automated"],
  "regexManagers": [
    {
// We want a PR to bump Go versions used through env variables in any Github
// Actions, taking it from the official Github repository.
      "fileMatch": ["^\\.github\\/workflows\\/[^/]+\\.ya?ml$"],
      "matchStrings": [
        "GO_VERSION: '(?<currentValue>.*?)'\\n"
      ],
      "datasourceTemplate": "golang-version",
      "depNameTemplate": "golang"
    }, {
// We want a PR to bump golangci-lint versions used through env variables in
// any Github Actions or Makefile, taking it from the official Github
// repository tags.
      "fileMatch": ["^\\.github\\/workflows\\/[^/]+\\.ya?ml$","^Makefile$"],
      "matchStrings": [
        "GOLANGCI_VERSION: 'v(?<currentValue>.*?)'\\n",
        "GOLANGCILINT_VERSION = (?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "golangci/golangci-lint",
      "extractVersionTemplate": "^v(?<version>.*)$"
    }, {
// We want a PR to bump the helm version used through env variables in
// any Github Actions or Makefile, taking it from the official Github
// repository tags.
      "fileMatch": ["^Makefile$"],
      "matchStrings": [
        "HELM3_VERSION = (?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "helm/helm",
    }, {
// We want a PR to bump the kind version used through env variables in
// any Github Actions or Makefile, taking it from the official Github
// repository tags.
      "fileMatch": ["^Makefile$"],
      "matchStrings": [
        "KIND_VERSION = (?<currentValue>.*?)\\n"
      ],
      "datasourceTemplate": "github-tags",
      "depNameTemplate": "kubernetes-sigs/kind",
    }
  ],
// PackageRules disabled below should be enabled in case of vulnerabilities
  "vulnerabilityAlerts": {
    "enabled": true
  },
  "packageRules": [
// We don't want dependency updates which are not security related for
// release branches, except for docker images
    {
      matchBaseBranches: [ "/^release-.*/"],
      enabled: false,
    }, {
      "matchDatasources": ["docker"],
      matchBaseBranches: [ "/^release-.*/"],
      enabled: true,
    }, {
      "matchDatasources": ["docker"],
      "schedule": ["every 2 week on monday"],
      enabled: true,
    }, {
// We need to ignore k8s.io/client-go older versions as they switched to
// semantic version and old tags are still available in the repo.
      "matchDatasources": [
        "go"
      ],
      "matchDepNames": [
        "k8s.io/client-go"
      ],
      "allowedVersions": "<1.0",
    }, {
// We want a single PR for all bumps to Go dependencies, but only if there are
// known vulnerabilities in the current version. We need to ignore k8s related
// dependencies too as they should be first updated on crossplane-runtime.
      "matchDatasources": [
        "go"
      ],
      "matchPackagePatterns": [
        "*"
      ],
      "enabled": false,
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch",
        "digest"
      ],
      "groupName": "all go dependencies"
    }, {
// We want a single PR for all non-major bumps of Github Actions
      "matchDepTypes": [
        "action"
      ],
      "matchUpdateTypes": [
        "minor",
        "patch",
        "digest"
      ],
      "groupName": "all non-major github action",
      "pinDigests": true
    },{
// We want dedicated PRs for each major bump to Github Actions
      "matchDepTypes": [
        "action"
      ],
      "pinDigests": true
    },{
// We disable updates actions for oss-fuzz, as it's not using tags, we'll just
// point to master branch
      "matchDepTypes": [
        "action"
      ],
      "matchDepNames": [
        "google/oss-fuzz"
      ],
      "enabled": false
    }
  ]
}
